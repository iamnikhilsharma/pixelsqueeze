name: Docker Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t pixelsqueeze:test .
    
    - name: Run Docker container tests
      run: |
        # Start the container
        docker run -d --name pixelsqueeze-test -p 5002:5002 pixelsqueeze:test
        
        # Wait for container to be ready
        sleep 30
        
        # Test health endpoint
        curl -f http://localhost:5002/health || exit 1
        
        # Test API endpoints
        curl -f http://localhost:5002/api/cors-test || exit 1
        
        # Stop and remove container
        docker stop pixelsqueeze-test
        docker rm pixelsqueeze-test
    
    - name: Run tests in Docker
      run: |
        # Run tests inside the container
        docker run --rm pixelsqueeze:test npm test
    
    - name: Test Docker Compose
      run: |
        # Test with docker-compose
        docker-compose -f docker-compose.yml up -d
        
        # Wait for services to be ready
        sleep 45
        
        # Test health endpoints
        curl -f http://localhost:5002/health || exit 1
        
        # Stop services
        docker-compose -f docker-compose.yml down

  docker-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'pixelsqueeze:test'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run Hadolint for Dockerfile linting
      run: |
        docker run --rm -i hadolint/hadolint < Dockerfile
